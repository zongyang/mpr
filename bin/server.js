// Generated by LiveScript 1.3.1
(function(){
  var express, http, path, socket, hostConfig, app, server, io, aDay, sessions;
  express = require('express');
  http = require('http');
  path = require('path');
  socket = require('socket.io');
  hostConfig = require('./host-config');
  app = express();
  server = http.createServer(app);
  io = socket.listen(server, {
    resource: (hostConfig.path || '.') + '/socket.io'
  });
  app.use(app.router).use(express['static'](__dirname, {
    maxAge: aDay = 24 * 60 * 60
  }));
  app.get('/api/comments.json', function(req, res){
    res.json(getOldComments(0, 30));
  });
  sessions = {};
  io.on('connection', function(socket){
    console.log("connected!");
    socket.on('request-initial', function(sessionId){
      var i$, ref$, len$, url, data;
      console.log("typeof session-id: " + typeof sessionId + ", session-id: ", sessionId);
      if (sessionId && sessions[sessionId]) {
        for (i$ = 0, len$ = (ref$ = sessions[sessionId].urls).length; i$ < len$; ++i$) {
          url = ref$[i$];
          socket.join(url);
        }
      } else {
        sessionId = Date.now() + Math.random();
        sessions[sessionId] = {
          urls: []
        };
        console.log("assign new session-id: ", sessionId);
      }
      socket.emit('response-initial', data = {
        user: {
          username: 'abc',
          avatar: 'ddd'
        },
        sessionId: sessionId
      });
    });
  });
  server.listen(hostConfig.endServer.port, function(){
    console.log('listen', hostConfig.endServer.port);
  });
}).call(this);
